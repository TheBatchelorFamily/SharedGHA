---
name: Terraform Deploy

on:
  workflow_call:
    inputs:
      checkoutBranch:
        description: Branch or release to deploy
        required: true
        type: string
      deployLatestTag:
        default: false
        description: Allow imageTag variable to be overridden with latest tag from repo
        required: false
        type: boolean
      workingDirectory:
        description: Directory containing terraform config
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        description: temp
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: temp
        required: true

jobs:
  Build:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
   
    steps:
    - name: 'Checkout Github Action'
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Find Latest Tag
      run: |
        export LATEST_TAG
        LATEST_TAG=$(git describe --tags 'git rev-list --tags --max-count=1')
        echo "::set-env name=LATEST_TAG::$LATEST_TAG"

    - name: Add latest tag to tfvars
      if: ${{ inputs.deployLatestTag }} == true
      run: echo "imageTag = $LATEST_TAG" >> terraform.tfvars

    - name: Install terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: |
        terraform init
      working-directory: ${{ inputs.workingDirectory }}

    - name: Terraform Plan
      run: terraform plan -out main.tfplan
      working-directory: ${{ inputs.workingDirectory }}

    - name: Terraform Apply
      run: terraform apply main.tfplan
      working-directory: ${{ inputs.workingDirectory }}
