---
name: Terraform Deploy

on:
  workflow_call:
    inputs:
      checkoutBranch:
        description: Branch or release to deploy
        required: true
        type: string
      deployLatestTag:
        default: false
        description: Allow imageTag variable to be overridden with latest tag from repo
        required: false
        type: boolean
      workingDirectory:
        description: Directory containing terraform config
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        description: temp
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: temp
        required: true

jobs:
  plan:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: "Checkout Github Action"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          terraform init
        working-directory: ${{ inputs.workingDirectory }}

      - name: Find Latest Tag
        id: latest_tag
        run: |
          LATEST_TAG_GIT=$(git describe --tags "$(git rev-list --tags --max-count=1)")
          echo "latest_tag=$LATEST_TAG_GIT" >> "$GITHUB_OUTPUT"

      - name: Terraform Plan
        env:
          TF_VAR_image_tag: ${{ steps.latest_tag.outputs.latest_tag }}
        run: terraform plan -out main.tfplan
        working-directory: ${{ inputs.workingDirectory }}

      - name: Upload plan file
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ inputs.workingDirectory }}/main.tfplan

  apply:
    needs: plan
    runs-on: ubuntu-latest
    environment:
      name: production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: "Checkout Github Action"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          terraform init
        working-directory: ${{ inputs.workingDirectory }}

      - name: Download plan file
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ${{ inputs.workingDirectory }}

      - name: Terraform Apply
        run: terraform apply main.tfplan
        working-directory: ${{ inputs.workingDirectory }}
